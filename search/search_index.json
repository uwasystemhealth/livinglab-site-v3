{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Living Lab Website \u00b6 This is the Living Lab Website version 3. This has been created by Frinze Erin Lapuz for the Living Lab project. Technology Stack \u00b6 This website has been created using the following technologies: - React - a UI library in JavaScript that utilizes the power of Client-Side Rendering for Single Page Application - Next - a library of React that handles initial Server-Side Rendering, and also allows caching of the Static HTML and CSS generated readily to be served including the pages in the dynamic routes - MaterialKit + MaterialUI - a CSS library created by Creative Tim that provides easy and ready to use components to create website layout very fast Why Did I Use This Technology Stack? \u00b6 I used this technology stack for multiple reasons that I will list in the order of importance: Custom Reusable Components = Faster Development and Better Maintainability - in this project, there are a lot of repetitions of layout in multiple pages such as header and footer. Moreover, some pages such as the \"Accelerated Life Testing\" pages content are repeated layout with the difference only the content. Hence, I needed a way in order to create reusable components so that I will not have to recreate or copy paste code that I have already written. This also means that one change of code, will change all the related pages. This is the power of React. Template Components = Faster Development and Responsive Design - I needed a way to create responsive website that will look good regardless of whether the website is being viewed in a desktop, laptop, tablet or mobile phones. Furthermore, developing own components with good styling and also responsive takes too much time. Hence, the use of CSS library is important for this project. This is satisfied with MaterialKit + MaterialUI Static Site With Client-Side Rendering = Website Speed Perfomance and Security - I needed a way to create a website that is fast and secure. The original website is a simple HTML and CSS website, and only contained 3 pages which is good especially for its simplicity for speed and security. In my side, I had to add approximately 18 pages which means that I needed a way to reduce the loading speed without compromising the original security it had. I used Next in order to cache the static HTML and CSS for server-side rendering while still maintaining the client-side rendering for the speed. Since the entire site is static, there is no dynamicness or backend services that can be hacked to change the content of the website without going through the source code. If this reasoning of mine does not satisfy you, feel free to contact me and have a discussion about this. Quick start \u00b6 Clone the repo: git clone https://github.com/uwasystemhealth/livinglab-site-v3.git . Install the dependencies: npm install or yarn install To build the static files: npm run build or yarn build To start development server: npm run dev or yarn dev To start a normal server: npm run start or yarn start File Structure \u00b6 This is what you will see in the directories. Note: there will be comments for VERY VERY IMPORTANT FILES . (To Be Updated) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 livinglab-site-v3 . \u251c\u2500\u2500 Dockerfile \u251c\u2500\u2500 docker-compose.yml \u251c\u2500\u2500 ISSUE_TEMPLATE.md \u251c\u2500\u2500 LICENSE.md \u251c\u2500\u2500 README.md // GENERAL DOCUMENTATION \u251c\u2500\u2500 next.config.js // CONTAINS CONFIGURATIONS FOR RUNNING SUCH AS FOR WEBPACK \u251c\u2500\u2500 package.json // CONTAINS THE DEPENDENCIES OF THIS PROJECT \u251c\u2500\u2500 yarn.lock \u251c\u2500\u2500 assets // MATERIAL KIT ASSETS \u2502 \u251c\u2500\u2500 css // CONTAINS CSS MAP FROM SCSS \u2502 \u251c\u2500\u2500 img // CONTAINS STATICALLY INCLUDED IMAGES THAT ARE NOT REFERENCED BASED \u2502 \u2502 \u2514\u2500\u2500 ... // SUCH AS FAVICON, BASE BACKGROUND \u2502 \u251c\u2500\u2500 jss // CONTAINS PROPERTIES OF THE STYLED COMPONENTS \u2502 \u2502 \u251c\u2500\u2500 custom // CONTAINS CUSTOM COMPONENTS SPECIFIC STYLING \u2502 \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u251c\u2500\u2500 nextjs-material-kit // CONTAINS ALL MATERIAL KIT STYLING \u2502 \u2502 \u2502 \u251c\u2500\u2500 components // CONTAINS MATERIALKIT COMPONENTS SPECIFIC STYLING \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u2502 \u2514\u2500\u2500 pages \u2502 \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u2514\u2500\u2500 nextjs-material-kit.js // CONTAINS BASE TEMPLATE OF GENERAL STYLING FOR MATERIAL KIT COMPONENTS \u2502 \u2514\u2500\u2500 scss // CONTAINS ALL SCSS - GENERAL STYLING FOR THE WHOLE WEBSITE \u2502 \u251c\u2500\u2500 core \u2502 \u2502 \u251c\u2500\u2500 mixins // SCSS MIXINS \u2502 \u2502 \u2514\u2500\u2500 variables // SCSS VARIABLES \u2502 \u251c\u2500\u2500 plugins // MATERIAL KIT PLUGINS \u2502 \u2514\u2500\u2500 nextjs-material-kit.scss // LINKER OF ALL THE SCSS FILES \u251c\u2500\u2500 pages // ACCESSIBLE ROUTES \u2502 \u251c\u2500\u2500 api \u2502 \u2502 \u2514\u2500\u2500 mail.js // API for Mail Service - sends mail towards the an address after contact form \u2502 \u2502 \u2502 \u251c\u2500\u2500 accelerated-life-testing \u2502 \u2502 \u251c\u2500\u2500 [testingName].js // (DYNAMIC PAGE) for all ALT Equipment \u2502 \u2502 \u2514\u2500\u2500 index.js // ALT equipment mainpage \u2502 \u2502 \u2502 \u251c\u2500\u2500 case-studies \u2502 \u2502 \u251c\u2500\u2500 [caseStudyName].js // (DYNAMIC PAGE) for all Case Studies \u2502 \u2502 \u2514\u2500\u2500 index.js // Case Study Base page \u2502 \u2502 \u2502 \u251c\u2500\u2500 roadmap \u2502 \u2502 \u251c\u2500\u2500 accelerated-life-testing // (DYNAMIC PAGE) for all Case Studies \u2502 \u2502 \u2502 \u2514\u2500\u2500[testingName].js // (DYNAMIC PAGE) for all Pathway Page \u2502 \u2502 \u2502 \u2514\u2500\u2500accelerated-life-test.js // CUSTOM Pathway Page \u2502 \u2502 \u2502 \u2514\u2500\u2500index.js // Mainpage for ALT Roadmap \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 accelerated-life-testing // (DYNAMIC PAGE) for all Case Studies \u2502 \u2502 \u2514\u2500\u2500[testingName].js // (DYNAMIC PAGE) for all Pathway Page \u2502 \u2502 \u2514\u2500\u2500site-trial.js // CUSTOM Pathway Page \u2502 \u2502 \u2514\u2500\u2500index.js // Mainpage for DST Roadmap \u2502 \u2502 \u2502 \u251c\u2500\u2500 _app.js // CONTAINS THE BASIC LAYOUT OF ANY PAGE SERVED IN /pages \u2502 \u251c\u2500\u2500 _document.js // CONTAINS ANY META TAGS OF ANY PAGE SERVED IN /pages \u2502 \u251c\u2500\u2500 _error.js // CONTAINS WHAT HAPPENS ON ERROR OR 404 \u2502 \u251c\u2500\u2500 components.js \u2502 \u251c\u2500\u2500 about.js \u2502 \u251c\u2500\u2500 index.js \u2502 \u2514\u2500\u2500 privacy-policy.js \u2502 \u251c\u2500\u2500 components //REUSABLE COMPONENTS - small case are for following PAGES directory \u2502 \u251c\u2500\u2500 accelerated-life-testing // upper case are for general directory \u2502 \u2502 \u251c\u2500\u2500 TestingCard.js // CARD LAYOUT OF THE TESTING EQUIPMENT \u2502 \u2502 \u251c\u2500\u2500 TestingModal.js // MODAL VIEW OF THE TESTING EQUIPMENT \u2502 \u2502 \u2514\u2500\u2500 TestingPageContent.js // PAGE VIEW OF THE TESTING EQUIPMENT \u2502 \u2502 \u2502 \u251c\u2500\u2500 case-studies \u2502 \u2502 \u251c\u2500\u2500 CSCard.js // CARD LAYOUT OF THE TESTING EQUIPMENT \u2502 \u2502 \u251c\u2500\u2500 CSModal.js // MODAL VIEW OF THE CASE STUDY \u2502 \u2502 \u2514\u2500\u2500 CSPageContent.js // PAGE VIEW OF THE CASE STUDY \u2502 \u2502 \u2502 \u251c\u2500\u2500 Context // Contextual Component \u2502 \u2502 \u2514\u2500\u2500 index.js // General Context - currently only has Contact Form Trigger and State \u2502 \u2502 \u2502 \u251c\u2500\u2500 Layout \u2502 \u2502 \u251c\u2500\u2500 CallToAction.js // THIS IS EMBEDDED WITH FOOTER \u2502 \u2502 \u251c\u2500\u2500 Contact.js \u2502 \u2502 \u251c\u2500\u2500 Footer.js \u2502 \u2502 \u251c\u2500\u2500 Head.js // CONTAINS ALL META TAGS \u2502 \u2502 \u2514\u2500\u2500 Navbar.js \u2502 \u2502 \u2502 \u251c\u2500\u2500 MaterialKit // ALL MATERIAL KIT COMPONENTS \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u2502 \u251c\u2500\u2500 roadmaps \u2502 \u2502 \u2514\u2500\u2500 StepperPathway.js // CONTAINS ICONS AND COMPONENT SPECIFIC TO THE ROADMAPS \u2502 \u2502 \u2502 \u2514\u2500\u2500 Team \u2502 \u2514\u2500\u2500 Collage.js \u2502 \u251c\u2500\u2500 data //CONTAINS ALL GROUPED DATA SUCH AS: \u2502 \u251c\u2500\u2500 AcceleratedLifeTestingContent.js // ALT \u2502 \u251c\u2500\u2500 CaseStudies.js // Case Studies \u2502 \u251c\u2500\u2500 Roadmap-AcceleratedLifeTesting.js // Roadmap Pathways and Details \u2502 \u251c\u2500\u2500 Roadmap-DeriskingSiteTrials.js \u2502 \u2514\u2500\u2500 Team.json // Team Details \u2502 \u251c\u2500\u2500 pages-sections // SECTIONS OF PAGES - NAMED AFTER PAGES AND ROUTES OF PAGES \u2502 \u251c\u2500\u2500 AboutPage-Sections // ABOUT PAGE SECTIONS \u2502 \u2502 \u251c\u2500\u2500 AboutLivingLab.js \u2502 \u2502 \u2514\u2500\u2500 MeetTheTeam.js \u2502 \u2502 \u2502 \u251c\u2500\u2500 accelerated-life-testing \u2502 \u2502 \u2514\u2500\u2500 AcceleratedLifeTesting-Sections // ALT SECTIONS \u2502 \u2502 \u251c\u2500\u2500 Description.js \u2502 \u2502 \u2514\u2500\u2500 Testings.js \u2502 \u2502 \u2502 \u251c\u2500\u2500 CaseStudies-Sections // CASE STUDIES SECTIONS \u2502 \u2502 \u251c\u2500\u2500 CaseStudiesContent.js // CONTENT OF A SPECIFIC CASE STUDY \u2502 \u2502 \u251c\u2500\u2500 CaseStudiesList.js // LISTING OF CASE STUDIES \u2502 \u2502 \u2514\u2500\u2500 CaseStudiesMainPageContent.js // THE MAIN PAGE CASE STUDY \u2502 \u2502 \u2502 \u251c\u2500\u2500 HomePage-Sections // HOME PAGE SECTIONS \u2502 \u2502 \u251c\u2500\u2500 About.js \u2502 \u2502 \u251c\u2500\u2500 AcceleratedLifeTesting.js \u2502 \u2502 \u251c\u2500\u2500 CaseStudies.js \u2502 \u2502 \u251c\u2500\u2500 DeriskingSiteTrials.js \u2502 \u2502 \u2514\u2500\u2500 Partners.js \u2502 \u2502 \u2502 \u251c\u2500\u2500 PrivacyPolicy-Sections \u2502 \u2502 \u2514\u2500\u2500 PrivacyPolicyContent.js \u2502 \u2502 \u2502 \u2514\u2500\u2500 roadmap // ALL ABOUT ROADMAP \u2502 \u251c\u2500\u2500 RoadmapContent-Sections // A SPECIFIC ROADMAP CONTENT LAYOUT \u2502 \u2502 \u251c\u2500\u2500 Content.js \u2502 \u2502 \u2514\u2500\u2500 RoadmapPathwayPage.js \u2502 \u2502 \u2502 \u2514\u2500\u2500 RoadmapMainPage-Sections // ROADMAP MAIN PAGE CONTENT LAYOUT \u2502 \u251c\u2500\u2500 ALTDescription.js \u2502 \u251c\u2500\u2500 Description.js \u2502 \u251c\u2500\u2500 DSTDescription.js \u2502 \u2514\u2500\u2500 RoadmapsCard.js \u251c\u2500\u2500 helpers // HELPER FUNCTIONS \u2502 \u2514\u2500\u2500 validation.js // CLIENT-SIDE and SERVER-SIDE DATA VALIDATION \u251c\u2500\u2500 middlewares // BACKEND MIDDLEWARES \u2502 \u2514\u2500\u2500 SMTP.js // CONTAIN SMTP TRANSPORTER \u2502 \u2514\u2500\u2500 public // PUBLIC STATIC ELEMENT - FOLLOWS CLOSELY THE DIRECTORY STRUCTURE OF PAGES \u2514\u2500\u2500 img // CONTAINS IMAGES THAT ARE BY REFERENCE \u251c\u2500\u2500 ... // GENERAL IMAGES \u251c\u2500\u2500 accelerated-life-testing // ALT EQUIPMENT IMAGES \u2502 \u2514\u2500\u2500 ... // THE IMAGES ARE DIVIDED INTO EQUIPMENT DIRECTORIES \u2502 \u251c\u2500\u2500 case-studies \u251c\u2500\u2500 logos \u251c\u2500\u2500 roadmap // ROADMAP IMAGES FOR ALT AND DST \u2502 \u251c\u2500\u2500 accelerated-life-testing \u2502 \u2514\u2500\u2500 derisking-site-trials \u2502 \u2514\u2500\u2500 team // TEAM IMAGES \u2514\u2500\u2500 ... Additional Notes \u00b6 File-Based Routing \u00b6 pages directory is a very important folder as it determines the routing of the website. This can only contain \"PAGE\" components, and may contain static props fetching especially the dynamic pages . More info about routing here and about dynamic routing here . File-Splitting Guide \u00b6 This project components are mainly divided into three main parts: components , pages , pages-sections : 1. components - are very basic components that could be reused anywhere 2. pages-sections - are sections of pages. For example the pages/index are divided into multiple sections seen in pages-sections/HomePage-Sections 3. pages - these are accessible routes. The names of this files depends on what you want the page URL to look like. This is related to File-Based Routing . File-Content Convention \u00b6 The file content writing has a convention that follows: 1. Importing of Modules 2. Setting Up Components 3. Component Exporting Content 4. (Optional - used only for dynamic pages) Setting Up How The Component will Be Processed as a page. Read more about this here 5. Default Export of 3 Take a look at component/roadmaps/StepperPathway.js as an example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 // 1. Importing of Modules import ... from \"...\" // 2. Setting Up Components const StyledStepButton = styled ( StepButton )({ ... }); // 3. (START) Component Exporting Content export const StepIcon = ( props ) => { ... }; export const StepIconALT = ( props ) => { ... }; const StepperPathway = ({ pathway , roadmapTitle , whiteFont }) => { ... }; // 5. Default Export export default StepperPathway ; Directory Naming In Some Directory \u00b6 In some folder such as components , pages-section , and public/img . There will occasionally be directories that are lower caps, these are directories that follows the same format as of the one in the pages directory for easy reference. Environment Variable \u00b6 The format of the environment variable is this. (As of July 2020, only contains details for mail sending) 1 2 3 4 MAIL_RECEIVING_ACCOUNT=#### SMTP_HOST=#### SMTP_PORT=#### SMTP_AUTH_PASS=#### Docker Deploy \u00b6 Make sure you have docker installed and running. Type the command: This will build an image in docker 1 $ docker build -t livinglab-site-v3 . Run the docker compose to run the image with configurations in \"detached mode\" - run in background 1 $ docker-compose up -d Requirements Document May 2020 \u00b6 This document is the requirements document for the start of the website. The sketches is done in Figma. Colors and Branding \u00b6 Can be found here . Template Licensing \u00b6 Copyright 2020 Creative Tim (https://www.creative-tim.com/?ref=njsmk-readme) Licensed under MIT (https://github.com/creativetimofficial/nextjs-material-kit/blob/master/LICENSE.md)","title":"Overview"},{"location":"#living-lab-website","text":"This is the Living Lab Website version 3. This has been created by Frinze Erin Lapuz for the Living Lab project.","title":"Living Lab Website"},{"location":"#technology-stack","text":"This website has been created using the following technologies: - React - a UI library in JavaScript that utilizes the power of Client-Side Rendering for Single Page Application - Next - a library of React that handles initial Server-Side Rendering, and also allows caching of the Static HTML and CSS generated readily to be served including the pages in the dynamic routes - MaterialKit + MaterialUI - a CSS library created by Creative Tim that provides easy and ready to use components to create website layout very fast","title":"Technology Stack"},{"location":"#why-did-i-use-this-technology-stack","text":"I used this technology stack for multiple reasons that I will list in the order of importance: Custom Reusable Components = Faster Development and Better Maintainability - in this project, there are a lot of repetitions of layout in multiple pages such as header and footer. Moreover, some pages such as the \"Accelerated Life Testing\" pages content are repeated layout with the difference only the content. Hence, I needed a way in order to create reusable components so that I will not have to recreate or copy paste code that I have already written. This also means that one change of code, will change all the related pages. This is the power of React. Template Components = Faster Development and Responsive Design - I needed a way to create responsive website that will look good regardless of whether the website is being viewed in a desktop, laptop, tablet or mobile phones. Furthermore, developing own components with good styling and also responsive takes too much time. Hence, the use of CSS library is important for this project. This is satisfied with MaterialKit + MaterialUI Static Site With Client-Side Rendering = Website Speed Perfomance and Security - I needed a way to create a website that is fast and secure. The original website is a simple HTML and CSS website, and only contained 3 pages which is good especially for its simplicity for speed and security. In my side, I had to add approximately 18 pages which means that I needed a way to reduce the loading speed without compromising the original security it had. I used Next in order to cache the static HTML and CSS for server-side rendering while still maintaining the client-side rendering for the speed. Since the entire site is static, there is no dynamicness or backend services that can be hacked to change the content of the website without going through the source code. If this reasoning of mine does not satisfy you, feel free to contact me and have a discussion about this.","title":"Why Did I Use This Technology Stack?"},{"location":"#quick-start","text":"Clone the repo: git clone https://github.com/uwasystemhealth/livinglab-site-v3.git . Install the dependencies: npm install or yarn install To build the static files: npm run build or yarn build To start development server: npm run dev or yarn dev To start a normal server: npm run start or yarn start","title":"Quick start"},{"location":"#file-structure","text":"This is what you will see in the directories. Note: there will be comments for VERY VERY IMPORTANT FILES . (To Be Updated) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 livinglab-site-v3 . \u251c\u2500\u2500 Dockerfile \u251c\u2500\u2500 docker-compose.yml \u251c\u2500\u2500 ISSUE_TEMPLATE.md \u251c\u2500\u2500 LICENSE.md \u251c\u2500\u2500 README.md // GENERAL DOCUMENTATION \u251c\u2500\u2500 next.config.js // CONTAINS CONFIGURATIONS FOR RUNNING SUCH AS FOR WEBPACK \u251c\u2500\u2500 package.json // CONTAINS THE DEPENDENCIES OF THIS PROJECT \u251c\u2500\u2500 yarn.lock \u251c\u2500\u2500 assets // MATERIAL KIT ASSETS \u2502 \u251c\u2500\u2500 css // CONTAINS CSS MAP FROM SCSS \u2502 \u251c\u2500\u2500 img // CONTAINS STATICALLY INCLUDED IMAGES THAT ARE NOT REFERENCED BASED \u2502 \u2502 \u2514\u2500\u2500 ... // SUCH AS FAVICON, BASE BACKGROUND \u2502 \u251c\u2500\u2500 jss // CONTAINS PROPERTIES OF THE STYLED COMPONENTS \u2502 \u2502 \u251c\u2500\u2500 custom // CONTAINS CUSTOM COMPONENTS SPECIFIC STYLING \u2502 \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u251c\u2500\u2500 nextjs-material-kit // CONTAINS ALL MATERIAL KIT STYLING \u2502 \u2502 \u2502 \u251c\u2500\u2500 components // CONTAINS MATERIALKIT COMPONENTS SPECIFIC STYLING \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u2502 \u2514\u2500\u2500 pages \u2502 \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u2514\u2500\u2500 nextjs-material-kit.js // CONTAINS BASE TEMPLATE OF GENERAL STYLING FOR MATERIAL KIT COMPONENTS \u2502 \u2514\u2500\u2500 scss // CONTAINS ALL SCSS - GENERAL STYLING FOR THE WHOLE WEBSITE \u2502 \u251c\u2500\u2500 core \u2502 \u2502 \u251c\u2500\u2500 mixins // SCSS MIXINS \u2502 \u2502 \u2514\u2500\u2500 variables // SCSS VARIABLES \u2502 \u251c\u2500\u2500 plugins // MATERIAL KIT PLUGINS \u2502 \u2514\u2500\u2500 nextjs-material-kit.scss // LINKER OF ALL THE SCSS FILES \u251c\u2500\u2500 pages // ACCESSIBLE ROUTES \u2502 \u251c\u2500\u2500 api \u2502 \u2502 \u2514\u2500\u2500 mail.js // API for Mail Service - sends mail towards the an address after contact form \u2502 \u2502 \u2502 \u251c\u2500\u2500 accelerated-life-testing \u2502 \u2502 \u251c\u2500\u2500 [testingName].js // (DYNAMIC PAGE) for all ALT Equipment \u2502 \u2502 \u2514\u2500\u2500 index.js // ALT equipment mainpage \u2502 \u2502 \u2502 \u251c\u2500\u2500 case-studies \u2502 \u2502 \u251c\u2500\u2500 [caseStudyName].js // (DYNAMIC PAGE) for all Case Studies \u2502 \u2502 \u2514\u2500\u2500 index.js // Case Study Base page \u2502 \u2502 \u2502 \u251c\u2500\u2500 roadmap \u2502 \u2502 \u251c\u2500\u2500 accelerated-life-testing // (DYNAMIC PAGE) for all Case Studies \u2502 \u2502 \u2502 \u2514\u2500\u2500[testingName].js // (DYNAMIC PAGE) for all Pathway Page \u2502 \u2502 \u2502 \u2514\u2500\u2500accelerated-life-test.js // CUSTOM Pathway Page \u2502 \u2502 \u2502 \u2514\u2500\u2500index.js // Mainpage for ALT Roadmap \u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 accelerated-life-testing // (DYNAMIC PAGE) for all Case Studies \u2502 \u2502 \u2514\u2500\u2500[testingName].js // (DYNAMIC PAGE) for all Pathway Page \u2502 \u2502 \u2514\u2500\u2500site-trial.js // CUSTOM Pathway Page \u2502 \u2502 \u2514\u2500\u2500index.js // Mainpage for DST Roadmap \u2502 \u2502 \u2502 \u251c\u2500\u2500 _app.js // CONTAINS THE BASIC LAYOUT OF ANY PAGE SERVED IN /pages \u2502 \u251c\u2500\u2500 _document.js // CONTAINS ANY META TAGS OF ANY PAGE SERVED IN /pages \u2502 \u251c\u2500\u2500 _error.js // CONTAINS WHAT HAPPENS ON ERROR OR 404 \u2502 \u251c\u2500\u2500 components.js \u2502 \u251c\u2500\u2500 about.js \u2502 \u251c\u2500\u2500 index.js \u2502 \u2514\u2500\u2500 privacy-policy.js \u2502 \u251c\u2500\u2500 components //REUSABLE COMPONENTS - small case are for following PAGES directory \u2502 \u251c\u2500\u2500 accelerated-life-testing // upper case are for general directory \u2502 \u2502 \u251c\u2500\u2500 TestingCard.js // CARD LAYOUT OF THE TESTING EQUIPMENT \u2502 \u2502 \u251c\u2500\u2500 TestingModal.js // MODAL VIEW OF THE TESTING EQUIPMENT \u2502 \u2502 \u2514\u2500\u2500 TestingPageContent.js // PAGE VIEW OF THE TESTING EQUIPMENT \u2502 \u2502 \u2502 \u251c\u2500\u2500 case-studies \u2502 \u2502 \u251c\u2500\u2500 CSCard.js // CARD LAYOUT OF THE TESTING EQUIPMENT \u2502 \u2502 \u251c\u2500\u2500 CSModal.js // MODAL VIEW OF THE CASE STUDY \u2502 \u2502 \u2514\u2500\u2500 CSPageContent.js // PAGE VIEW OF THE CASE STUDY \u2502 \u2502 \u2502 \u251c\u2500\u2500 Context // Contextual Component \u2502 \u2502 \u2514\u2500\u2500 index.js // General Context - currently only has Contact Form Trigger and State \u2502 \u2502 \u2502 \u251c\u2500\u2500 Layout \u2502 \u2502 \u251c\u2500\u2500 CallToAction.js // THIS IS EMBEDDED WITH FOOTER \u2502 \u2502 \u251c\u2500\u2500 Contact.js \u2502 \u2502 \u251c\u2500\u2500 Footer.js \u2502 \u2502 \u251c\u2500\u2500 Head.js // CONTAINS ALL META TAGS \u2502 \u2502 \u2514\u2500\u2500 Navbar.js \u2502 \u2502 \u2502 \u251c\u2500\u2500 MaterialKit // ALL MATERIAL KIT COMPONENTS \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u2502 \u251c\u2500\u2500 roadmaps \u2502 \u2502 \u2514\u2500\u2500 StepperPathway.js // CONTAINS ICONS AND COMPONENT SPECIFIC TO THE ROADMAPS \u2502 \u2502 \u2502 \u2514\u2500\u2500 Team \u2502 \u2514\u2500\u2500 Collage.js \u2502 \u251c\u2500\u2500 data //CONTAINS ALL GROUPED DATA SUCH AS: \u2502 \u251c\u2500\u2500 AcceleratedLifeTestingContent.js // ALT \u2502 \u251c\u2500\u2500 CaseStudies.js // Case Studies \u2502 \u251c\u2500\u2500 Roadmap-AcceleratedLifeTesting.js // Roadmap Pathways and Details \u2502 \u251c\u2500\u2500 Roadmap-DeriskingSiteTrials.js \u2502 \u2514\u2500\u2500 Team.json // Team Details \u2502 \u251c\u2500\u2500 pages-sections // SECTIONS OF PAGES - NAMED AFTER PAGES AND ROUTES OF PAGES \u2502 \u251c\u2500\u2500 AboutPage-Sections // ABOUT PAGE SECTIONS \u2502 \u2502 \u251c\u2500\u2500 AboutLivingLab.js \u2502 \u2502 \u2514\u2500\u2500 MeetTheTeam.js \u2502 \u2502 \u2502 \u251c\u2500\u2500 accelerated-life-testing \u2502 \u2502 \u2514\u2500\u2500 AcceleratedLifeTesting-Sections // ALT SECTIONS \u2502 \u2502 \u251c\u2500\u2500 Description.js \u2502 \u2502 \u2514\u2500\u2500 Testings.js \u2502 \u2502 \u2502 \u251c\u2500\u2500 CaseStudies-Sections // CASE STUDIES SECTIONS \u2502 \u2502 \u251c\u2500\u2500 CaseStudiesContent.js // CONTENT OF A SPECIFIC CASE STUDY \u2502 \u2502 \u251c\u2500\u2500 CaseStudiesList.js // LISTING OF CASE STUDIES \u2502 \u2502 \u2514\u2500\u2500 CaseStudiesMainPageContent.js // THE MAIN PAGE CASE STUDY \u2502 \u2502 \u2502 \u251c\u2500\u2500 HomePage-Sections // HOME PAGE SECTIONS \u2502 \u2502 \u251c\u2500\u2500 About.js \u2502 \u2502 \u251c\u2500\u2500 AcceleratedLifeTesting.js \u2502 \u2502 \u251c\u2500\u2500 CaseStudies.js \u2502 \u2502 \u251c\u2500\u2500 DeriskingSiteTrials.js \u2502 \u2502 \u2514\u2500\u2500 Partners.js \u2502 \u2502 \u2502 \u251c\u2500\u2500 PrivacyPolicy-Sections \u2502 \u2502 \u2514\u2500\u2500 PrivacyPolicyContent.js \u2502 \u2502 \u2502 \u2514\u2500\u2500 roadmap // ALL ABOUT ROADMAP \u2502 \u251c\u2500\u2500 RoadmapContent-Sections // A SPECIFIC ROADMAP CONTENT LAYOUT \u2502 \u2502 \u251c\u2500\u2500 Content.js \u2502 \u2502 \u2514\u2500\u2500 RoadmapPathwayPage.js \u2502 \u2502 \u2502 \u2514\u2500\u2500 RoadmapMainPage-Sections // ROADMAP MAIN PAGE CONTENT LAYOUT \u2502 \u251c\u2500\u2500 ALTDescription.js \u2502 \u251c\u2500\u2500 Description.js \u2502 \u251c\u2500\u2500 DSTDescription.js \u2502 \u2514\u2500\u2500 RoadmapsCard.js \u251c\u2500\u2500 helpers // HELPER FUNCTIONS \u2502 \u2514\u2500\u2500 validation.js // CLIENT-SIDE and SERVER-SIDE DATA VALIDATION \u251c\u2500\u2500 middlewares // BACKEND MIDDLEWARES \u2502 \u2514\u2500\u2500 SMTP.js // CONTAIN SMTP TRANSPORTER \u2502 \u2514\u2500\u2500 public // PUBLIC STATIC ELEMENT - FOLLOWS CLOSELY THE DIRECTORY STRUCTURE OF PAGES \u2514\u2500\u2500 img // CONTAINS IMAGES THAT ARE BY REFERENCE \u251c\u2500\u2500 ... // GENERAL IMAGES \u251c\u2500\u2500 accelerated-life-testing // ALT EQUIPMENT IMAGES \u2502 \u2514\u2500\u2500 ... // THE IMAGES ARE DIVIDED INTO EQUIPMENT DIRECTORIES \u2502 \u251c\u2500\u2500 case-studies \u251c\u2500\u2500 logos \u251c\u2500\u2500 roadmap // ROADMAP IMAGES FOR ALT AND DST \u2502 \u251c\u2500\u2500 accelerated-life-testing \u2502 \u2514\u2500\u2500 derisking-site-trials \u2502 \u2514\u2500\u2500 team // TEAM IMAGES \u2514\u2500\u2500 ...","title":"File Structure"},{"location":"#additional-notes","text":"","title":"Additional Notes"},{"location":"#file-based-routing","text":"pages directory is a very important folder as it determines the routing of the website. This can only contain \"PAGE\" components, and may contain static props fetching especially the dynamic pages . More info about routing here and about dynamic routing here .","title":"File-Based Routing"},{"location":"#file-splitting-guide","text":"This project components are mainly divided into three main parts: components , pages , pages-sections : 1. components - are very basic components that could be reused anywhere 2. pages-sections - are sections of pages. For example the pages/index are divided into multiple sections seen in pages-sections/HomePage-Sections 3. pages - these are accessible routes. The names of this files depends on what you want the page URL to look like. This is related to File-Based Routing .","title":"File-Splitting Guide"},{"location":"#file-content-convention","text":"The file content writing has a convention that follows: 1. Importing of Modules 2. Setting Up Components 3. Component Exporting Content 4. (Optional - used only for dynamic pages) Setting Up How The Component will Be Processed as a page. Read more about this here 5. Default Export of 3 Take a look at component/roadmaps/StepperPathway.js as an example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 // 1. Importing of Modules import ... from \"...\" // 2. Setting Up Components const StyledStepButton = styled ( StepButton )({ ... }); // 3. (START) Component Exporting Content export const StepIcon = ( props ) => { ... }; export const StepIconALT = ( props ) => { ... }; const StepperPathway = ({ pathway , roadmapTitle , whiteFont }) => { ... }; // 5. Default Export export default StepperPathway ;","title":"File-Content Convention"},{"location":"#directory-naming-in-some-directory","text":"In some folder such as components , pages-section , and public/img . There will occasionally be directories that are lower caps, these are directories that follows the same format as of the one in the pages directory for easy reference.","title":"Directory Naming In Some Directory"},{"location":"#environment-variable","text":"The format of the environment variable is this. (As of July 2020, only contains details for mail sending) 1 2 3 4 MAIL_RECEIVING_ACCOUNT=#### SMTP_HOST=#### SMTP_PORT=#### SMTP_AUTH_PASS=####","title":"Environment Variable"},{"location":"#docker-deploy","text":"Make sure you have docker installed and running. Type the command: This will build an image in docker 1 $ docker build -t livinglab-site-v3 . Run the docker compose to run the image with configurations in \"detached mode\" - run in background 1 $ docker-compose up -d","title":"Docker Deploy"},{"location":"#requirements-document-may-2020","text":"This document is the requirements document for the start of the website. The sketches is done in Figma.","title":"Requirements Document May 2020"},{"location":"#colors-and-branding","text":"Can be found here .","title":"Colors and Branding"},{"location":"#template-licensing","text":"Copyright 2020 Creative Tim (https://www.creative-tim.com/?ref=njsmk-readme) Licensed under MIT (https://github.com/creativetimofficial/nextjs-material-kit/blob/master/LICENSE.md)","title":"Template Licensing"}]}